[gd_scene load_steps=12 format=3 uid="uid://ljfktkrr6aw2"]

[ext_resource type="Shader" path="res://assets/clouds.gdshader" id="1_yqoxk"]
[ext_resource type="Texture2D" uid="uid://b1b8q3liltdjv" path="res://assets/sprites/background/cloud1.png" id="2_f6xg6"]
[ext_resource type="Script" path="res://assets/scripts/parallax_layer.gd" id="3_nrqdi"]
[ext_resource type="Texture2D" uid="uid://h7tlvp0fdyam" path="res://assets/sprites/background/cloud2.png" id="4_ag6vy"]
[ext_resource type="Texture2D" uid="uid://bfd5ghbvvog54" path="res://assets/sprites/background/cloud4.png" id="5_eqii7"]
[ext_resource type="Texture2D" uid="uid://yfr2l3i5b7s7" path="res://assets/sprites/background/cloud5.png" id="6_d24uo"]

[sub_resource type="GDScript" id="GDScript_owq8m"]
script/source = "extends Node

func _process(delta):
	for i in range(get_child_count()):
#		get_child(i).set_pivot_goal(Vector2(
#			0.5*get_viewport().get_visible_rect().size.x * 5 * sin(Time.get_ticks_msec()/2),
#			-0.005*get_viewport().get_visible_rect().size.y*(i-3)
#		))
		
		get_child(i).pivot_offset = Vector2(
			get_viewport().get_visible_rect().size.x * 0.5,
			-0.005*get_viewport().get_visible_rect().size.y*(i-3) + (get_child_count()-i)*0.05
		)

#func _handle_parallax():
#	for i in range(get_child_count()):
#		get_child(i).set_pivot_goal(Vector2(
#			i*position.x*0.3 + 0.5*get_viewport().get_visible_rect().size.x, 
##			clamp(-i*position.y*0.05, 200, -50)
#			-0.005*get_viewport_rect().size.y*(i-3) + (layers.get_child_count()-i)*position.y*0.05
#		))
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_o6klq"]
shader = ExtResource("1_yqoxk")
shader_parameter/intensity = 0.5

[sub_resource type="ShaderMaterial" id="ShaderMaterial_yescu"]
shader = ExtResource("1_yqoxk")
shader_parameter/intensity = 0.6

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qd6dp"]
shader = ExtResource("1_yqoxk")
shader_parameter/intensity = 0.55

[sub_resource type="ShaderMaterial" id="ShaderMaterial_425ix"]
shader = ExtResource("1_yqoxk")
shader_parameter/intensity = 0.4

[node name="menu" type="Node2D"]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="background" type="CanvasLayer" parent="."]
layer = -1

[node name="layers" type="Node" parent="background"]
script = SubResource("GDScript_owq8m")

[node name="Sprite2D2" type="TextureRect" parent="background/layers"]
modulate = Color(0.431373, 0.431373, 0.431373, 1)
material = SubResource("ShaderMaterial_o6klq")
anchors_preset = 14
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
offset_top = -54.0
offset_bottom = 54.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(4, 4)
size_flags_vertical = 8
texture = ExtResource("2_f6xg6")
stretch_mode = 1
script = ExtResource("3_nrqdi")

[node name="Sprite2D3" type="TextureRect" parent="background/layers"]
modulate = Color(0.431373, 0.431373, 0.431373, 1)
material = SubResource("ShaderMaterial_yescu")
anchors_preset = 14
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
offset_top = -54.0
offset_bottom = 54.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(4, 4)
size_flags_vertical = 8
texture = ExtResource("4_ag6vy")
stretch_mode = 1
script = ExtResource("3_nrqdi")

[node name="Sprite2D4" type="TextureRect" parent="background/layers"]
modulate = Color(0.431373, 0.431373, 0.431373, 1)
material = SubResource("ShaderMaterial_qd6dp")
anchors_preset = 14
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
offset_top = -54.0
offset_bottom = 54.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(4, 4)
size_flags_vertical = 8
texture = ExtResource("5_eqii7")
stretch_mode = 1
script = ExtResource("3_nrqdi")

[node name="Sprite2D5" type="TextureRect" parent="background/layers"]
modulate = Color(0.431373, 0.431373, 0.431373, 1)
material = SubResource("ShaderMaterial_425ix")
anchors_preset = 14
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
offset_top = -54.0
offset_bottom = 54.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(4, 4)
size_flags_vertical = 8
texture = ExtResource("6_d24uo")
stretch_mode = 1
script = ExtResource("3_nrqdi")
